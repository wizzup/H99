module Misc where

-- | Problem #90: (**) Eight queens problem
-- >>> length (queens 8)
-- 92
-- >>> head (queens 8)
-- [1,5,8,6,3,7,2,4]
length = undefined

-- | Problem #91: (**) Knight's tour
-- >>> head $ knightsTo 8 (1,1)
-- [(2,7),(3,5),(5,6),(4,8),(3,6),(4,4),(6,5),(4,6),
-- (5,4),(7,5),(6,3),(5,5),(4,3),(2,4),(1,6),(2,8),
-- (4,7),(6,8),(8,7),(6,6),(4,5),(6,4),(5,2),(7,1),
-- (8,3),(6,2),(8,1),(7,3),(8,5),(7,7),(5,8),(3,7),
-- (1,8),(2,6),(3,4),(1,5),(2,3),(3,1),(1,2),(3,3),
-- (1,4),(2,2),(4,1),(5,3),(7,4),(8,2),(6,1),(4,2),
-- (2,1),(1,3),(2,5),(1,7),(3,8),(5,7),(7,8),(8,6),
-- (6,7),(8,8),(7,6),(8,4),(7,2),(5,1),(3,2),(1,1)]
-- >>> head $ closedKnights 8
-- [(1,1),(3,2),(1,3),(2,1),(3,3),(5,4),(6,6),(4,5),
-- (2,6),(1,8),(3,7),(5,8),(4,6),(2,5),(4,4),(5,6),
-- (6,4),(8,5),(7,7),(6,5),(5,3),(6,1),(4,2),(6,3),
-- (8,2),(7,4),(5,5),(3,4),(1,5),(2,7),(4,8),(3,6),
-- (1,7),(3,8),(5,7),(7,8),(8,6),(6,7),(8,8),(7,6),
-- (8,4),(7,2),(5,1),(4,3),(3,5),(1,4),(2,2),(4,1),
-- (6,2),(8,1),(7,3),(5,2),(7,1),(8,3),(7,5),(8,7),
-- (6,8),(4,7),(2,8),(1,6),(2,4),(1,2),(3,1),(2,3)]
head = undefined

-- | Problem #92: (***) Von Koch's conjecture
-- >>>  head $ vonKoch [(1,6),(2,6),(3,6),(4,6),(5,6),(5,7),(5,8),(8,9),(5,10),(10,11),(11,12),(11,13),(13,14)]
-- [6,7,8,9,3,4,10,11,5,12,2,13,14,1]
head = undefined

-- | Problem #93: (***) An arithmetic puzzle
-- >>> mapM_ putStrLn $ puzzle [2,3,5,7,11]
-- 2 = 3-(5+7-11)
-- 2 = 3-5-(7-11)
-- 2 = 3-(5+7)+11
-- 2 = 3-5-7+11
-- 2 = (3*5+7)/11
-- 2*(3-5) = 7-11
-- 2-(3-(5+7)) = 11
-- 2-(3-5-7) = 11
-- 2-(3-5)+7 = 11
-- 2-3+5+7 = 11
mapM_ = undefined

-- | Problem #94: (***) Generate K-regular simple graphs with N nodes
-- >>> length $ regular 6 3
-- 2
length = undefined

-- | Problem #95: (**) English number words
-- >>> fullWords 175
-- one-seven-five
fullWords = undefined

-- | Problem #96: (**) Syntax checker
-- >>> identifier "this-is-a-long-identifier"
-- True
-- >>> identifier "this-ends-in-"
-- False
-- >>> identifier "two--hyphens"
-- False
identifier = undefined

-- | Problem #97: (**) Sudoku
--


-- | Problem #98: (***) Nonograms
-- >>> putStr $ nonogram [[3],[2,1],[3,2],[2,2],[6],[1,5],[6],[1],[2]] [[1,2],[3,1],[1,5],[7,1],[5],[3],[4],[3]]
-- |_|X|X|X|_|_|_|_| 3
-- |X|X|_|X|_|_|_|_| 2 1
-- |_|X|X|X|_|_|X|X| 3 2
-- |_|_|X|X|_|_|X|X| 2 2
-- |_|_|X|X|X|X|X|X| 6
-- |X|_|X|X|X|X|X|_| 1 5
-- |X|X|X|X|X|X|_|_| 6
-- |_|_|_|_|X|_|_|_| 1
-- |_|_|_|X|X|_|_|_| 2
--  1 3 1 7 5 3 4 3
--  2 1 5 1
putStr = undefined

-- | Problem #99: (***) Crossword puzzle
-- >>> solve $ readCrossword "ALPHA\nARES\nPOPPY\n\n  .  \n  .  \n.....\n  . .\n  . .\n    .\n"
--
-- [[((3,1),'A'),((3,2),'L'),((3,3),'P'),((3,4),'H'),((3,5),'A'),((1,3),'P'),((2,3)
-- ,'O'),((3,3),'P'),((4,3),'P'),((5,3),'Y'),((3,5),'A'),((4,5),'R'),((5,5),'E'),((
-- 6,5),'S')]]
solve = undefined

